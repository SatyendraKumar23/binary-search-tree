//print root to leaf node
import java.util.*;
public class roottoleaf {
    static class node
    {
        int data;
        node left;
         node right;

         public node(int data)
         {
            this.data=data;
            this.left=null;
            this.right=null;
         }
    }
    public static node insert(node root,int val)
    {
        if(root==null)
        {
            root=new node(val);
            return root;
        }
        if(root.data>val)
        {
            root.left=insert(root.left,val);
        }
        if(root.data<val)
        {
            root.right=insert(root.right,val);
        }
        return root;
    }
    public static void inorder(node root)
    {
        if(root==null)
        {
            return;
        }
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    public static void printpath(ArrayList<Integer>path)
    {
        for(int i=0;i<path.size();i++)
        {
            System.out.print(path.get(i)+" ->");
        }
        System.out.println(" null");
    }
    public static void roottoleaf2(node root,ArrayList<Integer>path)
    {
        if(root==null)
        {
            return;
        }
        path.add(root.data);
        if(root.left==null&&root.right==null)
        {
            printpath(path);
        }
        roottoleaf2(root.left,path);
        roottoleaf2(root.right,path);
        path.remove(path.size()-1);

    }
    public static void main(String[] args) {
        int val[]={8,5,3,1,4,6,10,11,14};
        node root=null;

        for(int i=0;i<val.length;i++)
        {
            root=insert(root,val[i]);
        }
        inorder(root);
        System.out.println();

        ArrayList<Integer>path=new ArrayList<>();
        roottoleaf2(root,path);
    }
    
}
